@import 'reset';
@import 'variables';
@import 'mixin';

BODY {
    .debug {
        @include dark;

        &.view {
            display: none;
            font-size: #{$font_size_1};
            height: 18px;
            margin: 0px;
            opacity: 0.6;
            padding: 0px;
            width: 100%;
        }
    }

    &:has(#debug-toggle:checked) {
        .debug {
            &.view {
                display: block;
            }
        }
    }
}

#debug {

    * {
        font-family: #{$fonts};
        font-size: #{$font_size_1};
        text-align: left;
    }

    H1,
    H2,
    H3,
    H4,
    H5,
    H6,
    P {
        margin-block-start: #{$font_size_1};
        margin-block-end: #{$font_size_1};
    }

    PRE {
        font-size: #{$font_size_2};
    }

    .base03 {
        color: #{$base03} !important;
    }

    .base02 {
        color: #{$base02} !important;
    }

    .base01 {
        color: #{$base01} !important;
    }

    .base00 {
        color: #{$base00} !important;
    }

    .base0 {
        color: #{$base0} !important;
    }

    .base1 {
        color: #{$base1} !important;
    }

    .base2 {
        color: #{$base2} !important;
    }

    .base3 {
        color: #{$base3} !important;
    }

    .yellow {
        color: #{$yellow} !important;
    }

    .orange {
        color: #{$orange} !important;
    }

    .red {
        color: #{$red} !important;
    }

    .magenta {
        color: #{$magenta} !important;
    }

    .violet {
        color: #{$violet} !important;
    }

    .blue {
        color: #{$blue} !important;
    }

    .cyan {
        color: #{$cyan} !important;
    }

    .green {
        color: #{$green} !important;
    }

    .clickable {
        cursor: pointer;
        text-decoration: underline;

        &:hover {
            opacity: 0.6;
        }
    }

    .debug-container {

        .debug-toggle-checkbox {
            display: none;

            &:checked~.debug-toggle-button {
                transition: 0.2s;

                .icon-arrow-top {
                    transform: rotate(135deg);
                }
            }
        }

        .debug-toggle-button {
            bottom: 0px;
            cursor: pointer;
            display: block;
            position: fixed;
            right: 20px;
            bottom: 8px;
            transition: 0.2s;
            z-index: 9999;

            &:hover {
                opacity: 0.6;
            }

            .icon-arrow-top {
                display: inline-block;
                box-sizing: border-box;
                width: #{$font_size_1};
                height: #{$font_size_1};
                border-style: solid;
                border-width: 4px 4px 0 0;
                border-color: #{$base0};
                transform: rotate(315deg);
                transition: 0.3s;
            }

        }

        .debug-contents {
            @include light;
            bottom: -100%;
            height: 50%;
            left: 0;
            overflow-y: hidden;
            position: fixed;
            transition: 0.2s;
            width: 100%;

            .debug-tab-button {
                @include light;
                display: block;
                float: left;
                height: 40px;
                line-height: 40px;
                text-align: center;
                text-decoration: none;
                transition: 0.3;
                width: calc(100%/#{$menu_count});
            }

            INPUT[name="debug-tab-radio"] {
                display: none;

                &:checked+.debug-tab-button {
                    @include dark;
                    color: #{$base2};
                }

                &:hover:enabled+.debug-tab-button {
                    @include dark;
                }
            }

            .debug-tab-container {
                @include dark;
                display: none;
                height: calc(100% - 40px);
                left: 0;
                position: relative;
                right: 0;
                width: 100%;

                &.scrollbar {
                    overflow-x: hidden;
                    overflow-y: scroll;
                }
            }

            #debug-tab-radio-variable:checked~#debug-tab-container-variable,
            #debug-tab-radio-view:checked~#debug-tab-container-view,
            #debug-tab-radio-route:checked~#debug-tab-container-route,
            #debug-tab-radio-query:checked~#debug-tab-container-query,
            #debug-tab-radio-config:checked~#debug-tab-container-config,
            #debug-tab-radio-sql:checked~#debug-tab-container-sql,
            #debug-tab-radio-error:checked~#debug-tab-container-error {
                display: block;
            }
        }
    }

    .padding {
        height: 0%;
        transition: 0.2s;
    }

    &:has(#debug-toggle:checked) {
        .debug-contents {
            bottom: 0%;
        }

        .padding {
            height: 50%;
        }
    }

    .expand-container {
        position: relative;

        .checkbox {
            display: none;

            &:checked+.label {
                .icon-plus:after {
                    opacity: 0;
                }

                &+.expandable {
                    display: block;
                }
            }
        }

        .label {
            .icon-plus {
                color: #{$base0};
                height: 1.6px;
                padding-left: #{$font_size_1};
                position: relative;
                width: #{$font_size_2};
            }

            .icon-plus:before,
            .icon-plus:after {
                background-color: currentColor;
                content: "";
                height: 1.6px;
                left: 0px;
                position: absolute;
                top: 50%;
                width: #{$font_size_2};
            }

            .icon-plus:after {
                -webkit-transform: rotate(90deg);
                transform: rotate(90deg);
                transition: 0.3s;
            }
        }

        .expandable {
            display: none;
            margin-left: #{$font_size_1};
            transition: 0.3s;
        }
    }

    .name {
        &:before {
            content: "";
        }
    }

    .value {
        &:before {
            color: #{$base0};
            content: "=>";
        }
    }
}